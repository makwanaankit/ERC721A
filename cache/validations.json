{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "bdf87b9c0494327ae3908352bb261dc814363719610104021a3e38fa5070965a",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "81405576ddc3e2f102f33af9f01fe3221530a295ac61d54b928d81599569d894",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f24de5cc9e04192f14d1bc937f45c5d79601e02b013fb35903be223626110059",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "082ce3173926c780e66b8429bbfbb242b0debfdb3359e326a4496351b224ad41",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/IncentiveToken.sol:IncentiveToken": {
        "src": "contracts/IncentiveToken.sol:7",
        "version": {
          "withMetadata": "ff4f13c1ccea34992acaf15e16f2a5d9bbe3ff52005ebfb58cde0c7134d21602",
          "withoutMetadata": "ceccff8af28a58094a388648a0ec5789b3a27a22c39e68bd0f90034f7e77b762",
          "linkedWithoutMetadata": "ceccff8af28a58094a388648a0ec5789b3a27a22c39e68bd0f90034f7e77b762"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "IncentiveToken",
            "src": "contracts/IncentiveToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/NFT721AToken.sol:NFT721AToken": {
        "src": "contracts/NFT721AToken.sol:11",
        "version": {
          "withMetadata": "1869a63dc48bda82bb5febf86a5fa85db2729ae1cce7859640ebd8da11b3b140",
          "withoutMetadata": "87d8861f2ccf4dc2f0c56c149ad99f588ca9f454f7cbd5307f2db9249f1dd1b5",
          "linkedWithoutMetadata": "87d8861f2ccf4dc2f0c56c149ad99f588ca9f454f7cbd5307f2db9249f1dd1b5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "erc721a/contracts/ERC721A.sol:ERC721A",
          "erc721a/contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(uint256)",
          "createToken(string[])",
          "withdraw()",
          "getIPFSURL(uint256)",
          "setMintRate(uint256)",
          "getWhiteListMinPrice()",
          "getNonWhiteListMinPrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NFT721AToken",
            "src": "contracts/NFT721AToken.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_MINTS",
            "src": "contracts/NFT721AToken.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts/NFT721AToken.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mintRate",
            "src": "contracts/NFT721AToken.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "whiteMintListPrice",
            "src": "contracts/NFT721AToken.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nonWhiteMintListPrice",
            "src": "contracts/NFT721AToken.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseURI",
            "src": "contracts/NFT721AToken.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "whtMntPrs",
            "src": "contracts/NFT721AToken.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nonWhtMntPrs",
            "src": "contracts/NFT721AToken.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_interval",
            "src": "contracts/NFT721AToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2383_storage)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:134"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "MAX_MINTS",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:12"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:13"
            },
            {
              "label": "mintRate",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:14"
            },
            {
              "label": "whiteMintListPrice",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:15"
            },
            {
              "label": "nonWhiteMintListPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:16"
            },
            {
              "label": "_erc20Token",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(IERC20)777",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:17"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "15",
              "type": "t_string_storage",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:18"
            },
            {
              "label": "whtMntPrs",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:19"
            },
            {
              "label": "nonWhtMntPrs",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:20"
            },
            {
              "label": "s_lastTimeStamp",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:21"
            },
            {
              "label": "userAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:22"
            },
            {
              "label": "l_incentiveTokenAddress",
              "offset": 0,
              "slot": "20",
              "type": "t_address_payable",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:24"
            },
            {
              "label": "uriToIpsfsUri",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:25"
            },
            {
              "label": "incentiveToken",
              "offset": 0,
              "slot": "22",
              "type": "t_contract(IncentiveToken)2048",
              "contract": "NFT721AToken",
              "src": "contracts/NFT721AToken.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IncentiveToken)2048": {
              "label": "contract IncentiveToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2383_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2383_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/ERC721A.sol:ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:36",
        "version": {
          "withMetadata": "2fe167e005b777ec99de2aadf98237ee0bbffdcfbb58e4cc2859b4c8f4198305",
          "withoutMetadata": "82c3ed8206ffc1231fc4ff84010d2268e29ece69e61706fae9c8dad317de24eb",
          "linkedWithoutMetadata": "82c3ed8206ffc1231fc4ff84010d2268e29ece69e61706fae9c8dad317de24eb"
        },
        "inherit": [
          "erc721a/contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2383_storage)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2383_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2383_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "erc721a/contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/IERC721A.sol:IERC721A": {
        "src": "erc721a/contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "bdf87b9c0494327ae3908352bb261dc814363719610104021a3e38fa5070965a",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "81405576ddc3e2f102f33af9f01fe3221530a295ac61d54b928d81599569d894",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f24de5cc9e04192f14d1bc937f45c5d79601e02b013fb35903be223626110059",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "082ce3173926c780e66b8429bbfbb242b0debfdb3359e326a4496351b224ad41",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/IncentiveToken.sol:IncentiveToken": {
        "src": "contracts/IncentiveToken.sol:7",
        "version": {
          "withMetadata": "ff4f13c1ccea34992acaf15e16f2a5d9bbe3ff52005ebfb58cde0c7134d21602",
          "withoutMetadata": "ceccff8af28a58094a388648a0ec5789b3a27a22c39e68bd0f90034f7e77b762",
          "linkedWithoutMetadata": "ceccff8af28a58094a388648a0ec5789b3a27a22c39e68bd0f90034f7e77b762"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "IncentiveToken",
            "src": "contracts/IncentiveToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/NFT721AToken.sol:NFT721AT": {
        "src": "contracts/NFT721AToken.sol:11",
        "version": {
          "withMetadata": "6a3530e7ef36f03955fb591a042412fd63735266ad8f439f58ebfefb84dfc228",
          "withoutMetadata": "f64f14e23c43fc28411c244a63cbfeaf0b654307544d715043d4251a75dc33f1",
          "linkedWithoutMetadata": "f64f14e23c43fc28411c244a63cbfeaf0b654307544d715043d4251a75dc33f1"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "erc721a/contracts/ERC721A.sol:ERC721A",
          "erc721a/contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(uint256)",
          "createToken(string[])",
          "withdraw()",
          "getIPFSURL(uint256)",
          "setMintRate(uint256)",
          "getWhiteListMinPrice()",
          "getNonWhiteListMinPrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NFT721AT",
            "src": "contracts/NFT721AToken.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_MINTS",
            "src": "contracts/NFT721AToken.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts/NFT721AToken.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mintRate",
            "src": "contracts/NFT721AToken.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "whiteMintListPrice",
            "src": "contracts/NFT721AToken.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nonWhiteMintListPrice",
            "src": "contracts/NFT721AToken.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseURI",
            "src": "contracts/NFT721AToken.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "whtMntPrs",
            "src": "contracts/NFT721AToken.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nonWhtMntPrs",
            "src": "contracts/NFT721AToken.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_interval",
            "src": "contracts/NFT721AToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2383_storage)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:134"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "MAX_MINTS",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:12"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:13"
            },
            {
              "label": "mintRate",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:14"
            },
            {
              "label": "whiteMintListPrice",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:15"
            },
            {
              "label": "nonWhiteMintListPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:16"
            },
            {
              "label": "_erc20Token",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(IERC20)777",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:17"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "15",
              "type": "t_string_storage",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:18"
            },
            {
              "label": "whtMntPrs",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:19"
            },
            {
              "label": "nonWhtMntPrs",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:20"
            },
            {
              "label": "s_lastTimeStamp",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:21"
            },
            {
              "label": "userAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:22"
            },
            {
              "label": "l_incentiveTokenAddress",
              "offset": 0,
              "slot": "20",
              "type": "t_address_payable",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:24"
            },
            {
              "label": "uriToIpsfsUri",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:25"
            },
            {
              "label": "incentiveToken",
              "offset": 0,
              "slot": "22",
              "type": "t_contract(IncentiveToken)2048",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IncentiveToken)2048": {
              "label": "contract IncentiveToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2383_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2383_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/ERC721A.sol:ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:36",
        "version": {
          "withMetadata": "2fe167e005b777ec99de2aadf98237ee0bbffdcfbb58e4cc2859b4c8f4198305",
          "withoutMetadata": "82c3ed8206ffc1231fc4ff84010d2268e29ece69e61706fae9c8dad317de24eb",
          "linkedWithoutMetadata": "82c3ed8206ffc1231fc4ff84010d2268e29ece69e61706fae9c8dad317de24eb"
        },
        "inherit": [
          "erc721a/contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2383_storage)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2383_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2383_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "erc721a/contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/IERC721A.sol:IERC721A": {
        "src": "erc721a/contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "bdf87b9c0494327ae3908352bb261dc814363719610104021a3e38fa5070965a",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "81405576ddc3e2f102f33af9f01fe3221530a295ac61d54b928d81599569d894",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f24de5cc9e04192f14d1bc937f45c5d79601e02b013fb35903be223626110059",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "082ce3173926c780e66b8429bbfbb242b0debfdb3359e326a4496351b224ad41",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/IncentiveToken.sol:IncentiveToken": {
        "src": "contracts/IncentiveToken.sol:7",
        "version": {
          "withMetadata": "ff4f13c1ccea34992acaf15e16f2a5d9bbe3ff52005ebfb58cde0c7134d21602",
          "withoutMetadata": "ceccff8af28a58094a388648a0ec5789b3a27a22c39e68bd0f90034f7e77b762",
          "linkedWithoutMetadata": "ceccff8af28a58094a388648a0ec5789b3a27a22c39e68bd0f90034f7e77b762"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "IncentiveToken",
            "src": "contracts/IncentiveToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/NFT721AToken.sol:NFT721AT": {
        "src": "contracts/NFT721AToken.sol:11",
        "version": {
          "withMetadata": "32679fe27725dd01eb915ed65786dcb26cb800e62b45f3ba751168c0f6ec126e",
          "withoutMetadata": "c954cd9481b2787d7471993a16e4963ff093d630f50fed0f99693e8213eb755b",
          "linkedWithoutMetadata": "c954cd9481b2787d7471993a16e4963ff093d630f50fed0f99693e8213eb755b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "erc721a/contracts/ERC721A.sol:ERC721A",
          "erc721a/contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,uint256)",
          "createToken(string[])",
          "withdraw()",
          "getIPFSURL(uint256)",
          "setMintRate(uint256)",
          "getWhiteListMinPrice()",
          "getNonWhiteListMinPrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NFT721AT",
            "src": "contracts/NFT721AToken.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_MINTS",
            "src": "contracts/NFT721AToken.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts/NFT721AToken.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mintRate",
            "src": "contracts/NFT721AToken.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "whiteMintListPrice",
            "src": "contracts/NFT721AToken.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nonWhiteMintListPrice",
            "src": "contracts/NFT721AToken.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseURI",
            "src": "contracts/NFT721AToken.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "whtMntPrs",
            "src": "contracts/NFT721AToken.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nonWhtMntPrs",
            "src": "contracts/NFT721AToken.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_interval",
            "src": "contracts/NFT721AToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2385_storage)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:134"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "MAX_MINTS",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:12"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:13"
            },
            {
              "label": "mintRate",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:14"
            },
            {
              "label": "whiteMintListPrice",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:15"
            },
            {
              "label": "nonWhiteMintListPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:16"
            },
            {
              "label": "_erc20Token",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(IERC20)777",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:17"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "15",
              "type": "t_string_storage",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:18"
            },
            {
              "label": "whtMntPrs",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:19"
            },
            {
              "label": "nonWhtMntPrs",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:20"
            },
            {
              "label": "s_lastTimeStamp",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:21"
            },
            {
              "label": "userAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:22"
            },
            {
              "label": "l_incentiveTokenAddress",
              "offset": 0,
              "slot": "20",
              "type": "t_address_payable",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:24"
            },
            {
              "label": "uriToIpsfsUri",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:25"
            },
            {
              "label": "incentiveToken",
              "offset": 0,
              "slot": "22",
              "type": "t_contract(IncentiveToken)2048",
              "contract": "NFT721AT",
              "src": "contracts/NFT721AToken.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IncentiveToken)2048": {
              "label": "contract IncentiveToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2385_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2385_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/ERC721A.sol:ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:36",
        "version": {
          "withMetadata": "2fe167e005b777ec99de2aadf98237ee0bbffdcfbb58e4cc2859b4c8f4198305",
          "withoutMetadata": "82c3ed8206ffc1231fc4ff84010d2268e29ece69e61706fae9c8dad317de24eb",
          "linkedWithoutMetadata": "82c3ed8206ffc1231fc4ff84010d2268e29ece69e61706fae9c8dad317de24eb"
        },
        "inherit": [
          "erc721a/contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2385_storage)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2385_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2385_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "erc721a/contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/IERC721A.sol:IERC721A": {
        "src": "erc721a/contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}